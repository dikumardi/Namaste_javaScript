
/** What is Closure in Javascript?
 * A function with its outer lexical environment together form a closures **/


/** Will the below code still forms a closure?
function outer() {
  function inner() {
    console.log(a);
  }
  var a = 10;
  return inner;
}
outer()(); // 10
// 
Yes , because it form a closures it does not matter in which line of code is here it see if it is inside the scope  / or lexical envirorment it form closures or not  **/


/** : Changing var to let, will it make any difference?
function outer() {
  let a = 10;
  function inner() {
    console.log(a);
  }
  return inner;
}
outer()(); // 10
// No it won't make any changes it behaves  works same way it can acces with let but if you want to acces it outside function or closure it give reference error .so we can only  access let inside its lexical scope  */


/**In below code, will inner form closure with outest?
function outest() {
  var c = 20;
  function outer(str) {
    let a = 10;
    function inner() {
      console.log(a, c, str);
    }
    return inner;
  }
  return outer;
}
outest()("Hello There")(); // 10 20 "Hello There"

ANSWER * Yes because it paramater comes under outer lexical environment .so it have the acces to it paramater also */


/**  Output of below code and explaination?
function outest() {
  var c = 20;
  function outer(str) {
    let a = 10;
    function inner() {
      console.log(a, c, str);
    }
    return inner;
  }
  return outer;
}
let a = 100;
outest()("Hello There")(); // 10 20 "Hello There"

Answer:-  IF IT have same confilict name it doesnot care beacuse inside the closures itself it reference is inside the closures only if it doesnot find insde the closure of its parent it  give reference error
* */